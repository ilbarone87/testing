openbao:  
  # Copyright (c) HashiCorp, Inc.
  # SPDX-License-Identifier: MPL-2.0

  # Available parameters and their default values for the OpenBao chart.

  global:
    # -- enabled is the master enabled switch. Setting this to true or false
    # will enable or disable all the components within this chart by default.
    enabled: true

    # -- The namespace to deploy to. Defaults to the `helm` installation namespace.
    namespace: "openbao"

  server:
    # If true, or "-" with global.enabled true, OpenBao server will be installed.
    # See openbao.mode in _helpers.tpl for implementation details.
    enabled: "-"

    # Resource requests, limits, etc. for the server cluster placement. This
    # should map directly to the value of the resources field for a PodSpec.
    # By default no direct resource request is made.

    image:
      # -- image registry to use for server image
      registry: "quay.io"
      # -- image repo to use for server image
      repository: "openbao/openbao"
      # -- image tag to use for server image
      tag: "2.2.0-beta20250213"
      # -- image pull policy to use for server image. if tag is "latest", set to "Always"
      pullPolicy: IfNotPresent

    # Configure the Update Strategy Type for the StatefulSet
    # See https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
    updateStrategyType: "OnDelete"

    # Configure the logging verbosity for the OpenBao server.
    # Supported log levels include: trace, debug, info, warn, error
    logLevel: ""

    # Configure the logging format for the OpenBao server.
    # Supported log formats include: standard, json
    logFormat: ""

    resources:
     resources:
       requests:
         memory: 256Mi
         cpu: 250m
       limits:
         memory: 256Mi
         cpu: 250m


    # This configures the OpenBao Statefulset to create a PVC for data
    # storage when using the file or raft backend storage engines.
    # See https://openbao.org/docs/configuration/storage to know more
    dataStorage:
      enabled: true
      # Size of the PVC created
      size: 3Gi
      # Location where the PVC will be mounted.
      mountPath: "/openbao/data"
      # Name of the storage class to use.  If null it will use the
      # configured default Storage Class.
      storageClass: null
      # Access Mode of the storage device being used for the PVC
      accessMode: ReadWriteOnce
      # Annotations to apply to the PVC
      annotations: {}
      # Labels to apply to the PVC
      labels: {}

    # This configures the OpenBao Statefulset to create a PVC for audit
    # logs.  Once OpenBao is deployed, initialized, and unsealed, OpenBao must
    # be configured to use this for audit logs.  This will be mounted to
    # /openbao/audit
    # See https://openbao.org/docs/audit to know more
    auditStorage:
      enabled: false
      # Size of the PVC created
      size: 1Gi
      # Location where the PVC will be mounted.
      mountPath: "/openbao/audit"
      # Name of the storage class to use.  If null it will use the
      # configured default Storage Class.
      storageClass: null
      # Access Mode of the storage device being used for the PVC
      accessMode: ReadWriteOnce
      # Annotations to apply to the PVC
      annotations: {}
      # Labels to apply to the PVC
      labels: {}

    # Run OpenBao in "HA" mode. There are no storage requirements unless the audit log
    # persistence is required.  In HA mode OpenBao will configure itself to use Consul
    # for its storage backend.  The default configuration provided will work the Consul
    # Helm project by default.  It is possible to manually configure OpenBao to use a
    # different HA backend.
    ha:
      enabled: true
      replicas: 3

      # Enables OpenBao's integrated Raft storage.  Unlike the typical HA modes where
      # OpenBao's persistence is external (such as Consul), enabling Raft mode will create
      # persistent volumes for OpenBao to store data according to the configuration under server.dataStorage.
      # The OpenBao cluster will coordinate leader elections and failovers internally.
      raft:
        # Enables Raft integrated storage
        enabled: true
        # Set the Node Raft ID to the name of the pod
        setNodeId: true

        # Note: Configuration files are stored in ConfigMaps so sensitive data
        # such as passwords should be either mounted through extraSecretEnvironmentVars
        # or through a Kube secret.  For more information see:
        # https://openbao.org/docs/platform/k8s/helm/run#protecting-sensitive-vault-configurations
        config: |
          ui = true

          listener "tcp" {
            tls_disable = 1
            address = "[::]:8200"
            cluster_address = "[::]:8201"
          }

          storage "raft" {
            path = "/openbao/data"
          }

          service_registration "kubernetes" {}

      # config is a raw string of default configuration when using a Stateful
      # deployment. Default is to use a Consul for its HA storage backend.
      # This should be HCL.

  # OpenBao UI
  ui:
    # True if you want to create a Service entry for the OpenBao UI.
    #
    # serviceType can be used to control the type of service created. For
    # example, setting this to "LoadBalancer" will create an external load
    # balancer (for supported K8S installations) to access the UI.
    enabled: true
    publishNotReadyAddresses: true
    # The service should only contain selectors for active OpenBao pod
    activeOpenbaoPodOnly: false
    serviceType: "ClusterIP"
    serviceNodePort: null
    externalPort: 8200
    targetPort: 8200